plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	//id 'com.palantir.docker' version '0.35.0'
}

group = 'com.polytech'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

/*configurations {
    docker {
        imageName = "my-app-covid"
        tag = "latest"
        buildArgs = [
            "JAVA_VERSION=11"
        ]
    }
}*/

repositories {
	mavenCentral()
}




dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation group: 'org.springframework.data', name: 'spring-data-commons', version: '3.1.4'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
  	annotationProcessor 'org.projectlombok:lombok'

	testRuntimeOnly 'com.h2database:h2'
	//testImplementation group: 'com.palantir', name: 'some-library', version: '1.0.0'
	
}

tasks.named('test') {
	useJUnitPlatform()
}
